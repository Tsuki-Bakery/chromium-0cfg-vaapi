--- trunk/src/chrome/browser/chrome_browser_main.cc	2012/09/07 19:44:53	155456
+++ trunk/src/chrome/browser/chrome_browser_main.cc	2012/09/07 19:45:06	155457
@@ -1081,7 +1081,13 @@
         printf("%s\n", base::SysWideToNativeMB(UTF16ToWide(
             l10n_util::GetStringUTF16(IDS_USED_EXISTING_BROWSER))).c_str());
 #endif
-        return chrome::RESULT_CODE_NORMAL_EXIT_PROCESS_NOTIFIED;
+        // Having a differentiated return type for testing allows for tests to
+        // verify proper handling of some switches. When not testing, stick to
+        // the standard Unix convention of returning zero when things went as
+        // expected.
+        if (parsed_command_line().HasSwitch(switches::kTestType))
+          return chrome::RESULT_CODE_NORMAL_EXIT_PROCESS_NOTIFIED;
+        return content::RESULT_CODE_NORMAL_EXIT;
 
       case ProcessSingleton::PROFILE_IN_USE:
         return chrome::RESULT_CODE_PROFILE_IN_USE;
